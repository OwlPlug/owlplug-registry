name: Validate Packages

on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]

permissions:
  contents: read

jobs:
  validate:
    if: ${{ !github.event.pull_request.draft }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:        
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v3
      - uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65 # v3
        with:
          node-version: '16'
      - run: npm ci

      - name: Registry state pre-validation
        run: echo "Not yet implemented"

      - id: pr-changed-files
        uses: jitterbit/get-changed-files@b17fbb00bdc0c0f63fcf166580804b4d2cdc2a42 # v1
        with:
          format: 'json' 

      - name: "Retrieve updated packages"
        id: pr-updated-packages
        run: |
          readarray -t updated_files <<<"$(jq -r '.[]' <<<'${{ steps.pr-changed-files.outputs.added_modified }}')"
          packages=()
          for updated_file in ${updated_files[@]}; do
            echo "Processing updated file: ${updated_file}."
            if [[ ${updated_file} == *package.yaml ]]; then
              packages+=("${updated_file}")
            fi
          done
          PACKAGES_JSON=$(jq --compact-output --null-input '$ARGS.positional' --args -- "${packages[@]}")
          echo "packages_json=$PACKAGES_JSON" >> $GITHUB_ENV

      - name: Create pr-artifacts directory
        if: ${{ always() }}
        run: mkdir ./pr-artifacts

      - name: "Validate packages"
        run: |
          readarray -t packages <<<"$(jq -r '.[]' <<<'${{ env.packages_json }}')"
          for package in ${packages[@]}; do
            echo "Validating package ${package}."
            set -o pipefail
            node index.js validate package ${package} | tee -a ./pr-artifacts/validate.log
            set +o pipefail
          done

          echo ./pr-artifacts/validate.log

      - name: Registry validation
        run: |
          set -o pipefail
          node index.js validate registry | tee -a ./pr-artifacts/validate.log
          set +o pipefail

      - name: Save PR number
        if: ${{ always() }}
        run: echo ${{ github.event.number }} > ./pr-artifacts/pr-number

      - uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3
        if: ${{ always() }}
        with:
          name: pr-artifacts
          path: pr-artifacts/
